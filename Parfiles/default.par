[General]

# Defines general parameters

#verbose or not
verbose = True
verbose_all_threads = False

# manually set wavelength range (if False, range taken from input data)
manual_waverange = False
# short wavelength cut-off (in microns) if manual_waverange = True
wavemin = 0.4
# long wavelength cut-off (in microns) if manual_waverange = True
wavemax = 20.0
# specturm type (emission, transmission)
type = transmission
# chemically consistent model ACE (Atmospheric Chemical Equilibrium)
ace = False
# recompile cpp code
compile_cpp = False

[Input]

# Defines input parameters

#Observed spectrum to be fitted (three columns: wavelength (micron), (Rp/R*)^2, error
spectrum_file = False
# append SPECTRUM_out.db to output. Useful to keep track of synthetic observations created with TauREx
spectrum_db = False
#use T-P profile and mixing ratios ATM file
use_ATMfile = False
atm_file = Input/profile.atm
# path to pickled cross sections and dnu
xsec_path = Input/xsec_10wno/
xsec_dnu  = 10
# Path where cia pairs are stored as pickled files
cia_path = Input/cia/HITRAN/
#Path to Phoenix/Atlas stellar models (required by emission code)
star_path = Input/star_spectra

[Output]

# Defines output parameters

#path for output files
path = Output/
#save plots to .pdf
save_plots = True
# calculate one sigma of fitted spectrum
sigma_spectrum = False
# fraction of total samples from which to calculate the one sigma spectrum
sigma_spectrum_frac = 0.1

[Star]

# Defines stellar specific parameters

#Stellar radius (R_sun)
radius =  0.788
#Stellar temperature (K)
temp   = 4900

[Planet]

# Defines planet specific parameters

# Planet calss. Available are: hotjupiter, superearth
class = hotjupiter
# Planetary radius (R_jupiter)
radius = 1.1724
# Planetary mass (M_jupiter)
mass = 1.13035


[Atmosphere]

# Defines atmosphere specific parameters

# number of atmospheric levels
nlayers = 100
# set maximum pressure level in Pascal
max_pressure = 1e6
min_pressure = 1e-4

# TP profile type to be selected (only sets for emission, tranmission = isothermal)
# available profiles are: isothermal, guillot, hybrid, 2point, 3point
tp_type = isothermal

# isothermal temperature
tp_iso_temp = 1500

# guillot params
tp_guillot_T_irr = 1500
tp_guillot_kappa_irr = 0.05
tp_guillot_kappa_v1 = 0.05
tp_guillot_kappa_v2 = 0.05
tp_guillot_alpha = 0.005

#2point params
#surface temperature 
tp_2point_T_surf = 1500
#troposphere temperature as difference to surface 
#T_trop = T_surf - T_trop_diff
tp_2point_T_trop_diff = 500
#troposphere pressure (PA)
tp_2point_P_trop = 100


# correlation length of TP profile for Rodgers2000 and Hybrid
tp_corr_length = 5.0

# active absorbers and absolute mixing ratios (if ace = False)
active_gases = H2O
active_gases_mixratios = 1e-5

# spectrally-inactive gases and relative mixing ratios. (if ace = False)
# The mixing ratios are relative to the remainder of the amtosphere (1 - active_gases_mixratios)
# Hence sum(inactive gases) must be 1
inactive_gases = H2, He
inactive_gases_mixratios = 0.85, 0.15

# mean molecular weight of the atmosphere (see also next param couple_mu)
mu = 2.3

# Couple mean molecular weight to the absolute mixing ratios of active and inactive gases
# This parameter is only used for forward model in create_spectrum
# NOTE: it overrides the value of mu specified above
# NOTE: for behaviour during fitting, see the different parameter in Fitting>couple_mu
couple_mu = True

# include Ryleigh scattering opacities
rayleigh = True

# include CIA opacities
cia = True

# Name of the pairs to include (use dash "-" between elements). The names are used to load the pickled files inside cia_path (e.g. "h2-h2" loads H2-H2.db).
cia_pairs = H2-H2, H2-He

# include cloud opacities. True/False
clouds = False
# cloud top pressure in Pascal
cld_topP = 1e3

# metallicity (1 = solar metallicity, 10 = 10x solar metallicity etc)
ace_metallicity = 1
# co ratio (value given below is solar)
ace_co = 0.54954

[Venot]

# Integrates TP and mixing ratio profiles from Olivia Venot (photo)chemical models

# if load = True, temperature-pressure-altitude profile is loaded form TP_profile_path, and mixing ratio profiles of the available
# molecules in xsec_path are loaded from mol_profile_path. If specific molecules need to be excluded, use exclude_mol

load = False
TP_profile_path = Input/Venot/example/profil_PTn_1000K_metal1.dat
mol_profile_path = Input/Venot/example/fractions_molaires_CO_0.5_T1000_019_renorm_1.25RJ.dat
exclude_mol = False


[Fitting]

# Defines general fittings parameters, independent of method

# fit transmission model
transmission = True
# fit emission model
emission     = False
# fit emission in 2 stage mode
emission_stage2 = True
# use the chemically consistent fit
ace = False

# if True mu is not fitted, but derived from the absolute mixing ratios of active and inactive gases
# if False, mu is either fitted (if fit_mu = True) or kept fixed to the value defined in Atmosphere > mu (if fit_mu = False)
couple_mu = False

# If fit_mu is True, set this parameter to True to rescale the absolute abundances of H2 and He
# according to the fitted value of mu. Note that the fitted value of mu referes to the remainder
# of the atmosphere (1 - sum( active gases )). If this parameter is set to True, the priors bounds
# for mu are automatically set between 2 and 4 (H2 dominated to He dominated), as values higher than
# 4 would not be permitted. NOTE that this parameter only works for H2/He dominated atmospheres,
# i.e. where the mmw of (1 - sum(active mix ratios) ) is between 2 and 4, and the inactive gases are
# He and H2 (no other inactive gas is allowed).
inactive_mu_rescale = False

# fit mixing ratios in log space
X_log = True
# centered log ratio transformation for mixing ratios
clr_trans = False

# Fit/fix parameters. True means the parameter is fitted, False the parameter is fixed to its input value

# fit the active gases mixing ratios, defined in Planet > inactive_gases
fit_active = True
# fit the inactive gases mixing ratios, defined in Planet > inactive_gases
fit_inactive = False
# fit the temperature (defined in Planet > temp. Not working if TP profile is not isothermal)
fit_temp = True
# fit the mean molecular weight (defined in Planet > mu. Careful: can be overidden by fit_couple_mu).
# the way in which mu is fitted depends on Atmosphere>couple_mu. If Atmosphere>couple_mu = False, then mu can take
# any value regardless of the absolute mixing ratios of the gases
fit_mu = True
# fit radius at atm_max_pressure (defined in Planet > radius)
fit_radius = True
# fit maximum pressure at surface (defined in T-P Profile > atm_max_pressure). Fit is in log space
fit_P0 = False
# fit cloud parameters. Only working if Planet > include_cld is True
# cloud top pressure
fit_clouds_topP = False
# ace: chemical consistent fitting
fit_ace_metallicity = False
fit_ace_co = False

# Set prior bounds (assume uniform priors)

# upper and lower bounds for active gases mixing ratios (in linear space). IMPORTANT: never set X_low to zero
X_active_bounds = 1.0e-8, 1.0
# upper and lower bounds for inactive gases mixing ratios (in linear space). IMPORTANT: never set X_low to zero
X_inactive_bounds = 1.0e-8, 1.0
# upper and lower bounds for the clr ratios
clr_bounds = -20, 20
#upper and lower bounds for mean molecular weight (in AMU)
mu_bounds = 0, 10
#Upper and lower bounds for planet radius (in RJUP)
radius_bounds = 0.2, 0.3
#Upper and lower bounds for surface pressure (in Pascal)
P0_bounds = 1.e2, 1.e8
# cloud top pressure bounds ( in Pascal ) ). Fit is in log space
clouds_topP_bounds = 1.e0, 1.e6

# tp profile bounds

#isothermal
tp_iso_bounds  = 1300, 1500

# guillot
tp_guillot_T_irr_bounds = 1300, 1500
tp_guillot_kappa_irr_bounds = 0., 0.1
tp_guillot_kappa_v1_bounds = 0., 0.1
tp_guillot_kappa_v2_bounds = 0., 0.1
tp_guillot_alpha_bounds = 0., 0.01

#lower and upper bounds for TP-profile hybrid alpha parameter
hybrid_alpha_bounds  = 0.0, 1.0

# ace specific parameters
ace_metallicity_bounds = 1.e-1, 1.e4
ace_co_bounds = 0, 2

[Downhill]

# Defines parameters for minimisation

# run minimisation routine on data
run = False
# type of minimisation to use: Nelder-Mead, Powell, CG, BFGS, Newton-CG, L-BFGS-B, TNC, COBYLA, SLSQP, dogleg, trust-ncg
# see scipy.optimize.minimize documentation
type = L-BFGS-B
# Supply extra parameters using options parameter. See scipy docu
options = {‘verbose’:False}
# pickle DOWN_out location (default params.out_path/DOWN_out.db)
out_filename = default

[MCMC]

###### MCMC OUTPUT CURRENTLY NOT SUPPORTED ######

# Defines MCMC specific parameters

# run MCMC analysis on data
run = False
# update data standard deviation from dynamic fit.
update_std = True
# MCMC number of total iterations
iter = 10000
# MCMC burn in period
burn = 1000
# MCMC thinning factor
thin = 1
# toggle verbose
verbose = True
# show progress bar
progressbar = True
# pickle MCMC_out location (default params.out_path/NEST_out.db)
out_filename = default

[MultiNest]

# Defines MultiNest specific parameters

# run Nested Sampling analysis on data
run = False
# resume from previous run
resume = True
# verbose
verbose = False
# sampling chains directory
nest_path = chains/
# sampling efficiency (parameter, ...)
sampling_eff = parameter
# number of live points
n_live_points = 1000
# maximum no. of iterations (0=inf)
max_iter = 0
# search for multiple modes
multimodes = True
# maximum number of modes
max_modes = 100
# run in constant efficiency mode
const_eff = False
# set log likelihood tolerance. If change is smaller, multinest will have converged
evidence_tolerance = 0.5
mode_tolerance = -1e90
# importance nested sampling
imp_sampling = False
# pickle NEST_out location (default params.out_path/NEST_out.db)
out_filename = default