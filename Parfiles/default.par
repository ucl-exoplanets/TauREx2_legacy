[General]

# Defines general parameters

#verbose or not
verbose = True
verbose_all_threads = False

# manually set wavelength range (if False, range taken from input data)
manual_waverange = False
# short wavelength cut-off (in microns) if manual_waverange = True
wavemin = 0.6
# long wavelength cut-off (in microns) if manual_waverange = True
wavemax = 29.0
# specturm type (emission, transmission)
type = transmission
# chemically consistent model
ACE = False
# recompile cpp code
compile_cpp = False

[Input]

# Defines input parameters

#Observed spectrum to be fitted (three columns: wavelength (micron), (Rp/R*)^2, error
spectrum_file = False
#use T-P profile and mixing ratios ATM file
use_ATMfile = False
atm_file = Input/profile.atm
# path to pickled cross sections and dnu
xsec_path = Input/xsec_10wno/
xsec_dnu  = 10
# Path where cia pairs are stored as pickled files
cia_path = Input/cia/HITRAN/
#Path to Phoenix/Atlas stellar models (required by emission code)
star_path = Input/star_spectra

[Output]

# Defines output parameters

#path for output files
path = Output/
#save internal model to file. Useful for when only creating transmission/emisison model
dump_internal = False
#internal model name save as
internal_name = internal_model.dat
#save plots to .pdf
save_plots = True
#plotting contours onto densities in posterior plots
plot_contour = True
# posterior plots colour (matplotlib colormaps)
plot_colour = Blues

[Preselector]

# Run preselector module to automatically estimate number and types of molecules present in spectrum.
# If run, the following parameters will be automatically determined and overwritten by the pre-selector:
# [Input]: atm_file, abs_path (overwritten by cross_path), abs_files
# [Input]: use_ATMfile = False,
# [Planet]: temp, molec, (mu not yet)
# [T-P profile]: num_gas
# not yet but soon: [Fitting]: T_up, T_low, X_up, X_low

#run preselector
run_pre = False
#Path of spectral library folder
speclib_path = Preselector/speclib/
#Path of PCA preselector .pkl file
pca_path = Preselector/
#(re)generate spectral library
generate_speclib = True
#restrict temperature range for cross-section lists
restrict_temp = True
#setting temperature range (K) if restrict_temp = True : low, high
temp_range = 800, 1600
#mixing ratios for which spectra are computed
mixing_ratio = 1e-5,1e-4,1e-3,1e-2
#(re)compute PCA preselector file
generate_pca = True
#masking threshold
mask_thres = 0.6
#force preselector to include following list of molecules
mol_force_on = True
#list of molecules to be added
#naming convention must be same as cross-section file, comma separated
mol_force = CO, H2O

[Star]

# Defines stellar specific parameters

#Stellar radius (R_sun)
radius =  0.788
#Stellar temperature (K)
temp   = 4900

[Planet]

# Defines planet specific parameters

# Planet calss. Available are: hotjupiter, superearth
class = hotjupiter
# Planetary radius (R_jupiter)
radius = 1.1724
# Planetary mass (M_jupiter)
mass = 1.13035
# Planetary temperature (K)
temp = 1400
# molecular weight of atmosphere
mu = 2.3

[Atmosphere]

# Defines atmosphere specific parameters

# thickness of atmosphere in number of atmospheric scale heights
num_scaleheights = 30
# number of atmospheric levels
nlayers = 100
# set maximum pressure level in Pascal
max_pressure = 1e6
min_pressure = 1e-4

# TP profile type to be selected (only sets for emission, tranmission = isothermal)
# available profiles are: isothermal, guillot, hybrid, 2point, 3point
profile_type = isothermal
# correlation length of TP profile for Rodgers2000 and Hybrid
corr_length = 5.0

# active absorbers and absolute mixing ratios
active_gases = H2O
active_gases_mixratios = 1e-5

# spectrally-inactive gases and relative mixing ratios.
# The mixing ratios are relative to the remainder of the amtosphere (1 - active_gases_mixratios)
inactive_gases = H2, He
inactive_gases_mixratios = 0.85, 15

# Couple mean molecular weight to the absolute mixing ratios of inactive gases
# NOTE: it overrides the value of mu specified in Planet->mu
# NOTE 2: see the different parameter in Fitting>couple_mu
couple_mu = True

# include Ryleigh scattering opacities
rayleigh = True

# include CIA opacities
cia = True
# Name of the pairs to include (use dash "-"!). The names are used to load the pickled files inside cia_path (e.g. "h2-h2" loads H2-H2.db).
cia_pairs = H2-H2, H2-He

# include cloud opacities. True/False
clouds = False
# cloud refractive index (m) and particle size (a) in microns. Comma separated
cld_params = 1.5, 1.0
# cloud pressure in Pascal, lower and upper bounds. Comma separated
cld_pressure = 1e3, 1.e6

# ACE specific parameters
ace_HE_abund_dex = 8
ace_C_abund_dex = 8
ace_O_abund_dex = 8
ace_N_abund_dex = 8

[Venot]

# Integrates TP and mixing ratio profiles from Olivia Venot (photo)chemical models

# if load = True, temperature-pressure-altitude profile is loaded form TP_profile_path, and mixing ratio profiles of the available
# molecules in xsec_path are loaded from mol_profile_path. If specific molecules need to be excluded, use exclude_mol

load = False
TP_profile_path = Input/Venot/example/profil_PTn_1000K_metal1.dat
mol_profile_path = Input/Venot/example/fractions_molaires_CO_0.5_T1000_019_renorm_1.25RJ.dat
exclude_mol = False


[Fitting]

# Defines general fittings parameters, independent of method

# fit transmission model
transmission = True
# fit emission model
emission     = False
# fit emission in 2 stage mode
emission_stage2 = True
# use the chemically consistent fit
ace = False


# if True mu is not fitted, but derived from the absolute mixing ratios of active and inactive gases
# if False, mu is either fitted (if fit_mu = True) or kept fixed (Planet > mu)
couple_mu = False
# fit mixing ratios in log space
X_log = True
# centered log ratio transformation for mixing ratios
clr_trans = False

# Fit/fix parameters. True means the parameter is fitted, False the parameter is fixed to its input value

# fit the active gases mixing ratios, defined in Planet > inactive_gases
fit_active = True
# fit the inactive gases mixing ratios, defined in Planet > inactive_gases
fit_inactive = False
# fit the temperature (defined in Planet > temp. Not working if TP profile is not isothermal)
fit_temp = True
# fit the mean molecular weight (defined in Planet > mu. Careful: can be overidden by fit_couple_mu).
# the way in which mu is fitted depends on Atmosphere>couple_mu. If Atmosphere>couple_mu = False, then mu can take
# any value regardless of the absolute mixing ratios of the gases
fit_mu = True
# fit radius at atm_max_pressure (defined in Planet > radius)
fit_radius = True
# fit maximum pressure at surface (defined in T-P Profile > atm_max_pressure). Fit is in log space
fit_P0 = False
# fit cloud parameters. Only working if Planet > include_cld is True
# clouds upper and lower pressure (defined in Planet > cld_pressure
fit_clouds_lower_P = False
fit_clouds_upper_P = False
# cloud particle refractive index (m) and particle size (a) (defined in Planet > cld_params)
fit_clouds_m = False
fit_clouds_a = False
# ACE: chemical consistent fitting
fit_He_abund_dex = False
fit_C_abund_dex = False
fit_O_abund_dex = False
fit_N_abund_dex = False

# Set prior bounds (assume uniform priors)

# upper and lower bounds for active gases mixing ratios (in linear space). IMPORTANT: never set X_low to zero
X_active_bounds = 1.0e-8, 1.0
# upper and lower bounds for inactive gases mixing ratios (in linear space). IMPORTANT: never set X_low to zero
X_inactive_bounds = 1.0e-8, 1.0
# upper and lower bounds for the clr ratios
clr_bounds = -20, 20
#Upper and lower bounds for temperature
T_bounds  = 1300, 1500
#upper and lower bounds for mean molecular weight (in AMU)
mu_bounds = 0, 10
#Upper and lower bounds for planet radius (in RJUP)
radius_bounds = 0.2, 0.3
#Upper and lower bounds for surface pressure (in Pascal)
P0_bounds = 1.e2, 1.e8
# cloud lower and upper pressure bounds ( in Pascal ) ). Fit is in log space
clouds_lower_P_bounds = 1.e0, 1.e6
clouds_upper_P_bounds = 1.e4, 1.e6

# cloud refractive index and particle size (micron) bounds
clouds_m_bounds = 0.8, 1.2
clouds_a_bounds = 1.3, 1.7

#lower and upper bounds for TP-profile hybrid alpha parameter
hybrid_alpha_low  = 0.0
hybrid_alpha_high = 1.0

# ace specific parameters
ace_He_abund_dex_bounds = 0, 12
ace_C_abund_dex_bounds = 0, 12
ace_O_abund_dex_bounds = 0, 12
ace_N_abund_dex_bounds = 0, 12


[Downhill]

# Defines parameters for minimisation

# run minimisation routine on data
run = False
# type of minimisation to use: Nelder-Mead, Powell, CG, BFGS, Newton-CG, L-BFGS-B, TNC, COBYLA, SLSQP, dogleg, trust-ncg
# see scipy.optimize.minimize documentation
type = L-BFGS-B
# Supply extra parameters using options parameter. See scipy docu
options = {‘verbose’:False}

[MCMC]

# Defines MCMC specific parameters

# run MCMC analysis on data
run = False
# update data standard deviation from dynamic fit.
update_std = True
# MCMC number of total iterations
iter = 10000
# MCMC burn in period
burn = 1000
# MCMC thinning factor
thin = 1
# toggle verbose
verbose = True
# show progress bar
progressbar = True

[MultiNest]

# Defines MultiNest specific parameters

# run Nested Sampling analysis on data
run = False
# resume from previous run
resume = True
# verbose
verbose = False
# sampling chains directory
nest_path = chains/
# sampling efficiency (parameter, ...)
sampling_eff = parameter
# number of live points
n_live_points = 1000
# maximum no. of iterations (0=inf)
max_iter = 0
# search for multiple modes
multimodes = True
# maximum number of modes
max_modes = 100
# run in constant efficiency mode
const_eff = False
# set log likelihood tolerance. If change is smaller, multinest will have converged
evidence_tolerance = 0.5
mode_tolerance = -1e90
# importance nested sampling
imp_sampling = False
# detect different modes in multinest output using clustering algorithm. It overrides detected modes if multimodes=True
cluster_analysis = False


[Housekeeping]
#lets you run an external script (py or sh) in subshell at the end of TauREx. Usefull to automatically transfer data or delete tmp files

# run housekeeping
run = False
# Name of script in TauREx base dir
script_name = transfer2home.py
# Save used parameter file to Output
save_used_params = True